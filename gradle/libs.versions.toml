#
# The master version catalog for the XDK.
#
# The settings plugin makes sure we only need to declare it in one location (here),
# for all included builds and and the aggregator will make sure all build scripts can use it.
#
# To avoid version skew, we also access this version catalog from settings files and settings
# plugins, using a more explicit hard-coded approach. The code for this lookup is in the
# "org.xtclang.build.gradle" convention plugin, in the function "resolveVersion".
#
# For anything post the settings stage, we can refer to entries in the version catalog
# in a typesafe way, e.g. alias(libs.versions) for a plugin. Or
# libs.versions.xdkVersion version number.
#
[versions]
# XDK versions are dynamically injected from VERSION file (single source of truth)
# These placeholders are overridden by the settings plugin reading VERSION file
xdk = "0.0.0-PLACEHOLDER"
xtc-plugin = "0.0.0-PLACEHOLDER"
group-xdk = "org.xtclang"
group-xtc-plugin = "org.xtclang"

kotlin = "2.1.20"  # Kotlin 2.1.20+ required for Java 23 support
download = "5.6.0"
gradle-portal-publish = "1.3.1"
sonatype-publish = "2.0.0"
jakarta = "2.3.2"
jline="3.30.4"
ktlint = "12.1.1"
junit = "5.13.1"

[plugins]
xtc = { id = "org.xtclang.xtc-plugin", version.ref = "xtc-plugin" }
xdk-build-aggregator = { id = "org.xtclang.build.aggregator", version.ref = "xdk" }
xdk-build-java = { id = "org.xtclang.build.java", version.ref = "xdk" }
xdk-build-publish = { id = "org.xtclang.build.publish", version.ref = "xdk" }
xdk-build-versioning = { id = "org.xtclang.build.xdk.versioning", version.ref = "xdk" }

download = { id = "de.undercouch.download", version.ref = "download" }
gradle-portal-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-portal-publish" }
sonatype-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "sonatype-publish" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

[libraries]
xdk = { group = "org.xtclang", name = "xdk", version.ref = "xdk" }
xdk-ecstasy = { group = "org.xtclang", name = "lib-ecstasy", version.ref = "xdk" }
xdk-aggregate = { group = "org.xtclang", name = "lib-aggregate", version.ref = "xdk" }
xdk-cli = { group = "org.xtclang", name = "lib-cli", version.ref = "xdk" }
xdk-collections = { group = "org.xtclang", name = "lib-collections", version.ref = "xdk" }
xdk-convert = { group = "org.xtclang", name = "lib-convert", version.ref = "xdk" }
xdk-crypto = { group = "org.xtclang", name = "lib-crypto", version.ref = "xdk" }
xdk-json = { group = "org.xtclang", name = "lib-json", version.ref = "xdk" }
xdk-jsondb = { group = "org.xtclang", name = "lib-jsondb", version.ref = "xdk" }
xdk-net = { group = "org.xtclang", name = "lib-net", version.ref = "xdk" }
xdk-oodb = { group = "org.xtclang", name = "lib-oodb", version.ref = "xdk" }
xdk-sec = { group = "org.xtclang", name = "lib-sec", version.ref = "xdk" }
xdk-web = { group = "org.xtclang", name = "lib-web", version.ref = "xdk" }
xdk-webauth = { group = "org.xtclang", name = "lib-webauth", version.ref = "xdk" }
xdk-webcli = { group = "org.xtclang", name = "lib-webcli", version.ref = "xdk" }
xdk-xenia = { group = "org.xtclang", name = "lib-xenia", version.ref = "xdk" }
xdk-xml = { group = "org.xtclang", name = "lib-xml", version.ref = "xdk" }

javatools = { group = "org.xtclang", name = "javatools", version.ref = "xdk" }
javatools-unicode = { group = "org.xtclang", name = "javatools-unicode", version.ref = "xdk" }
javatools-utils = { group = "org.xtclang", name = "javatools-utils", version.ref = "xdk" }
javatools-turtle = { group = "org.xtclang", name = "javatools-turtle", version.ref = "xdk" }
javatools-bridge = { group = "org.xtclang", name = "javatools-bridge", version.ref = "xdk" }
javatools-jitbridge = { group = "org.xtclang", name = "javatools-jitbridge", version.ref = "xdk" }

javax-activation = { module = "com.sun.activation:javax.activation", version = "1.2.0" }
jakarta-xml-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jakarta" }
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "jakarta" }
jline = { module = "org.jline:jline", version.ref = "jline" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

[bundles]
unicode = ["javax-activation", "jakarta-xml-bind-api", "jaxb-runtime"]
