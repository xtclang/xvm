#
# The master version catalog for the XDK.
#
# The settings plugin makes sure we only need to declare it in one location (here),
# for all included builds and and the aggregator will make sure all build scripts can use it.
#
# To avoid version skew, we also access this version catalog from settings files and settings
# plugins, using a more explicit hard-coded approach. The code for this lookup is in the
# "org.xvm.build.gradle" convention plugin, in the function "resolveVersion".
#
# For anything post the settings stage, we can refer to entries in the version catalog
# in a typesafe way, e.g. alias(libs.tasktree) for a dependency or plugin. Or
# libs.versions.xdkVersion version number.
#
[versions]
xdk = "0.4.41"
xtcplugin = "0.4.41"
xdkgroup = "org.xvm"

kohttp = "0.12.0"

[plugins]
xtc = { id = "org.xvm.xtc-plugin", version.ref = "xtcplugin" }
tasktree = { id = "com.dorongold.task-tree", version = "2.1.1" }
download = { id = "de.undercouch.download", version = "5.5.0" }
versions = { id = "com.github.ben-manes.versions", version = "0.49.0" }
#shadow = { id = "com.github.johnrengelman.shadow", version = "8.1.1" }
#nsis = { id = "io.github.androxyde.gradlensis", version = "0.2.0" }

[libraries]
javatools = { module = "org.xvm:javatools", version.ref = "xdk" }
javatools-unicode = { module = "org.xvm:javatools-unicode", version.ref = "xdk" }
javatools-utils = { module = "org.xvm:javatools-utils", version.ref = "xdk" }
javatools-turtle = { module = "org.xvm:javatools-turtle", version.ref = "xdk" }
javatools-bridge = { module = "org.xvm:javatools-bridge", version.ref = "xdk" }

xdk = { module = "org.xvm:xdk", version.ref = "xdk" }
xdk-ecstasy = { module = "org.xvm:lib-ecstasy", version.ref = "xdk" }
xdk-aggregate = { module = "org.xvm:lib-aggregate", version.ref = "xdk" }
xdk-collections = { module = "org.xvm:lib-collections", version.ref = "xdk" }
xdk-crypto = { module = "org.xvm:lib-crypto", version.ref = "xdk" }
xdk-json = { module = "org.xvm:lib-json", version.ref = "xdk" }
xdk-jsondb = { module = "org.xvm:lib-jsondb", version.ref = "xdk" }
xdk-net = { module = "org.xvm:lib-net", version.ref = "xdk" }
xdk-oodb = { module = "org.xvm:lib-oodb", version.ref = "xdk" }
xdk-web = { module = "org.xvm:lib-web", version.ref = "xdk" }
xdk-webauth = { module = "org.xvm:lib-webauth", version.ref = "xdk" }
xdk-xenia = { module = "org.xvm:lib-xenia", version.ref = "xdk" }

kohttp = { module = "io.github.rybalkinsd:kohttp", version.ref = "kohttp" }
kohttp-jackson = { module = "io.github.rybalkinsd:kohttp-jackson", version.ref = "kohttp" }

javax-activation = { module = "com.sun.activation:javax.activation", version = "1.2.0" }
jakarta-xml-bind-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version = "2.3.2" }
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version = "2.3.2" }

[bundles]
unicode = ["javax-activation", "jakarta-xml-bind-api", "jaxb-runtime"]
