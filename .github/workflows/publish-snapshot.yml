#
# GitHub workflow for publishing snapshot artifacts
#
# This workflow publishes snapshots to:
# - GitHub Packages (Maven artifacts)
# - Maven Central Snapshots
# - GitHub Releases (XDK snapshot release)
#
# Triggered by verify_commit workflow when:
# - Running on master branch (automatic)
# - Manually run with test-publishing=true (testing)
# Can also be triggered manually via workflow_dispatch for testing.
#
name: Publish Snapshots

permissions:
    contents: write
    packages: write
    actions: read

on:
    # Triggered explicitly by verify_commit workflow (on master or when test-publishing=true)
    # Can also be manually triggered for testing
    workflow_dispatch:
        inputs:
            ci-run-id:
                description: 'CI run ID to download artifact from (leave empty to skip artifact download)'
                required: false

# Concurrency settings: ensure only one publish runs at a time to avoid upload conflicts
# Queue multiple triggers instead of cancelling in-progress uploads
concurrency:
    group: publish-snapshots
    cancel-in-progress: false

jobs:
    publish-snapshots:
        name: Publish snapshot artifacts
        runs-on: ubuntu-latest

        steps:
            - name: Fetch Sources
              uses: actions/checkout@v5
              with:
                  fetch-depth: 1
                  show-progress: true

            - name: Setup XVM Project
              id: versions
              uses: ./.github/actions/setup-xvm-project
              with:
                  setup-build: true
                  cache-read-only: true  # Read-only since CI build already populated cache
                  enable-debug: false

            - name: Validate snapshot version
              shell: bash
              run: |
                  VERSION="${{ steps.versions.outputs.xdk-version }}"
                  if [[ "$VERSION" != *-SNAPSHOT ]]; then
                      echo "❌ ERROR: Cannot publish snapshots for non-SNAPSHOT version"
                      echo ""
                      echo "Current version: $VERSION"
                      echo ""
                      echo "This workflow only publishes SNAPSHOT versions."
                      echo "For release versions, use the publish-release workflow instead."
                      echo ""
                      exit 1
                  fi
                  echo "✅ Validated snapshot version: $VERSION"

            - name: Determine commit and run ID
              id: commit
              shell: bash
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Use CI run ID from input if provided
                  if [ -n "${{ github.event.inputs.ci-run-id }}" ]; then
                      RUN_ID="${{ github.event.inputs.ci-run-id }}"
                      # Get commit from the specified run
                      GH_COMMIT=$(gh api /repos/${{ github.repository }}/actions/runs/$RUN_ID --jq '.head_sha')
                      echo "📌 Using CI run from input: $RUN_ID (commit: $GH_COMMIT)"
                      echo "has-artifact=true" >> $GITHUB_OUTPUT
                  # Manual trigger without run-id
                  else
                      GH_COMMIT="${{ github.sha }}"
                      echo "📌 Manual trigger - commit: $GH_COMMIT"
                      echo "⚠️  No CI run-id provided"
                      echo "⚠️  Will publish Maven snapshots but skip GitHub release"
                      echo "has-artifact=false" >> $GITHUB_OUTPUT
                  fi
                  echo "commit=$GH_COMMIT" >> $GITHUB_OUTPUT
                  echo "run-id=$RUN_ID" >> $GITHUB_OUTPUT

            - name: Download XDK artifact from CI
              if: steps.commit.outputs.has-artifact == 'true'
              id: artifact
              uses: ./.github/actions/download-ci-artifact
              with:
                  run-id: ${{ steps.commit.outputs.run-id }}
                  commit: ${{ steps.commit.outputs.commit }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  repository: ${{ github.repository }}
                  output-path: ./artifacts

            - name: Publish Maven snapshots
              env:
                  # GitHub CLI (used for GitHub API operations)
                  GITHUB_ACTOR: ${{ github.actor }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  # GitHub Packages credentials (Gradle properties for Maven publishing)
                  ORG_GRADLE_PROJECT_githubUsername: ${{ github.actor }}
                  ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
                  # Gradle Plugin Portal credentials
                  ORG_GRADLE_PROJECT_gradle_publish_key: ${{ secrets.ORG_XTCLANG_GRADLE_PLUGIN_PORTAL_PUBLISH_KEY }}
                  ORG_GRADLE_PROJECT_gradle_publish_secret: ${{ secrets.ORG_XTCLANG_GRADLE_PLUGIN_PORTAL_PUBLISH_SECRET }}
                  # Maven Central credentials
                  ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_XTCLANG_MAVEN_CENTRAL_USERNAME }}
                  ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_XTCLANG_MAVEN_CENTRAL_PASSWORD }}
                  # Signing credentials
                  ORG_GRADLE_PROJECT_signing_keyId: ${{ secrets.ORG_XTCLANG_SIGNING_KEY_ID }}
                  ORG_GRADLE_PROJECT_signing_password: ${{ secrets.ORG_XTCLANG_SIGNING_PASSWORD }}
                  ORG_GRADLE_PROJECT_signing_key: ${{ secrets.ORG_XTCLANG_SIGNING_KEY }}
                  # SNAPSHOT versions automatically publish to GitHub Packages + Maven Central Snapshots
                  # Gradle Plugin Portal is automatically skipped (doesn't accept snapshots)
                  GRADLE_OPTS: ${{ steps.versions.outputs.gradle-jvm-opts }}
              run: |
                  echo "📦 Publishing Maven snapshot artifacts to GitHub Packages and Maven Central..."
                  echo "   (please note that gradlePluginPortal is skipped, since does not support SNAPSHOT versions.)"
                  ./gradlew ${{ steps.versions.outputs.gradle-options }} publish --info
                  echo "✅ Maven snapshots published"

            - name: Clean up old XDK package versions (keep 50 newest)
              if: success()
              uses: actions/delete-package-versions@v5
              with:
                  package-name: 'org.xtclang.xdk'
                  package-type: 'maven'
                  min-versions-to-keep: 30
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Clean up old Plugin package versions (keep 50 newest)
              if: success()
              uses: actions/delete-package-versions@v5
              with:
                  package-name: 'org.xtclang.xtc-plugin'
                  package-type: 'maven'
                  min-versions-to-keep: 30
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Clean up old Plugin Marker package versions (keep 50 newest)
              if: success()
              uses: actions/delete-package-versions@v5
              with:
                  package-name: 'org.xtclang.xtc-plugin.org.xtclang.xtc-plugin.gradle.plugin'
                  package-type: 'maven'
                  min-versions-to-keep: 30
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to GitHub snapshot release
              if: success() && steps.commit.outputs.has-artifact == 'true'
              uses: ./.github/actions/publish-github-release
              with:
                  artifact-path: ${{ steps.artifact.outputs.artifact-path }}
                  xdk-version: ${{ steps.versions.outputs.xdk-version }}
                  commit: ${{ steps.commit.outputs.commit }}
                  repo: ${{ github.repository }}
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  release-type: snapshot

            - name: Summary
              if: success()
              shell: bash
              run: |
                  echo "### ✅ Snapshots Published" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- **Version:** ${{ steps.versions.outputs.xdk-version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Commit:** ${{ steps.commit.outputs.commit }}" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Published to:**" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ GitHub Packages (Maven artifacts)" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ Maven Central Snapshots" >> $GITHUB_STEP_SUMMARY
                  if [ "${{ steps.commit.outputs.has-artifact }}" = "true" ]; then
                      echo "- ✅ GitHub Releases (xdk-snapshots)" >> $GITHUB_STEP_SUMMARY
                  else
                      echo "- ⏭️ GitHub Releases (skipped - manual trigger)" >> $GITHUB_STEP_SUMMARY
                  fi
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Maven artifacts:**" >> $GITHUB_STEP_SUMMARY
                  echo "- XDK distribution" >> $GITHUB_STEP_SUMMARY
                  echo "- javatools JAR" >> $GITHUB_STEP_SUMMARY
                  echo "- Gradle plugin" >> $GITHUB_STEP_SUMMARY
