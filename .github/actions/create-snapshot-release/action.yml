name: 'Create Snapshot Release'
description: 'Creates or updates the xdk-latest-snapshot GitHub release with XDK zip file'
inputs:
  xdk_version:
    description: 'XDK version (e.g., 0.4.4-SNAPSHOT)'
    required: true
  commit_sha:
    description: 'Full commit SHA for release tagging'
    required: true
  xdk_zip_name:
    description: 'Name of the XDK zip file to upload'
    required: true
  github_token:
    description: 'GitHub token with release permissions'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Create or update snapshot release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        RELEASE_TAG="xdk-latest-snapshot"
        RELEASE_NAME="XDK Latest Snapshot"
        ZIP_FILE="${{ inputs.xdk_zip_name }}"
        XDK_VERSION="${{ inputs.xdk_version }}"
        COMMIT_SHA="${{ inputs.commit_sha }}"
        BUILD_DATE=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
        
        echo "Creating/updating snapshot release with:"
        echo "  Tag: $RELEASE_TAG"
        echo "  Version: $XDK_VERSION"
        echo "  Commit: $COMMIT_SHA"
        echo "  Zip file: $ZIP_FILE"
        
        # Delete existing release if it exists (to overwrite)
        if gh release view $RELEASE_TAG >/dev/null 2>&1; then
          echo "Deleting existing snapshot release..."
          gh release delete $RELEASE_TAG --yes
        fi
        
        # Create new snapshot release
        echo "Creating new snapshot release..."
        
        # Create release notes using echo to avoid YAML parsing issues
        echo "Automated snapshot release" > release_notes.md
        echo "" >> release_notes.md
        echo "Built from commit: \`$COMMIT_SHA\`" >> release_notes.md
        echo "Version: \`$XDK_VERSION\`" >> release_notes.md
        echo "Build date: \`$BUILD_DATE\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "This is a snapshot release that gets automatically updated on every push to master. Use this for development and testing - stable releases will be tagged separately." >> release_notes.md
        echo "" >> release_notes.md
        echo "Installation via Homebrew:" >> release_notes.md
        echo "\`\`\`sh" >> release_notes.md
        echo "brew tap xtclang/xvm && brew install xdk-latest" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "Direct download:" >> release_notes.md
        echo "Download the zip file below and extract to your preferred location." >> release_notes.md

        # Rename the zip file to remove "-scripts" before uploading
        CLEAN_ZIP_NAME="xdk-$XDK_VERSION.zip"
        if [ "$ZIP_FILE" != "$CLEAN_ZIP_NAME" ]; then
          echo "Renaming $ZIP_FILE to $CLEAN_ZIP_NAME for upload..."
          cp "$ZIP_FILE" "$CLEAN_ZIP_NAME"
        fi
        
        gh release create $RELEASE_TAG \
          --title "$RELEASE_NAME" \
          --notes-file release_notes.md \
          --prerelease \
          "$CLEAN_ZIP_NAME"
        
        # Clean up temp file
        rm -f release_notes.md
        
        echo "âœ… Snapshot release created successfully"

branding:
  icon: 'upload'
  color: 'blue'
