#
# Gradle properties.
#

org.gradle.parallel=true
org.gradle.caching=true
org.gradle.caching.debug=false

# TODO: Experiment with enabling the configuration cache later
org.gradle.configuration-cache=false

# The "debug" property (default false) enables gradle debug mode. For the kotlin dsl, you can also step through
# build scripts.
#
# (See: https://docs.gradle.org/current/userguide/troubleshooting.html#sec:troubleshooting_build_logic
#  This will halt the build and allow you to attach a remote debugger to a specific port. The default is,
#  5005, and you may have to use --no-daemon as well, unless you attach to a suspended task.)
org.gradle.debug=false
org.gradle.debug.port=5005

# JVM and Gradle daemon flags. The default memory usage is 700M for a Daemon, which can be slow in extreme environments.
org.gradle.jvmargs=-Dfile.encoding=UTF-8 -Xmx4G

# Logging and warning levels
# (Console value can be one of: auto, plain, rich, verbose (default is auto),
#  warning mode can be one of: none, summary, all, fail  (default is summary))
org.gradle.console=auto
org.gradle.warning.mode=summary
#org.gradle.logging.stacktrace=all

systemProp.gradle.internal.publish.checksums.insecure=true

#
# Should we include the manualTests project as part of the aggregated XVM build?
#
# It is STRONGLY recommended to keep this "true", because otherwise you don't get IDE support. IntelliJ
# requires any project you want to work with to be declared in the build, or it will be invisible.
#
# If you experience build speed issues, set "includeBuildAttachManualTests" to false, which will make it
# show up in IntelliJ, get configured quickly, but not include any part of the build lifecycle from root,
# so that a "build" will not also trigger compilation of the manual tests source set. For GitHub
# workflows, we always run with manual tests both enabled as includedBuild, and attached to the
# XDK root build lifecycle.
#
# You can also locally override these properties with environment variables, just like any
# other Gradle property prefixed with "ORG_GRADLE_PROJECT_", for example
# ORG_GRADLE_PROJECT_includeBuildManualTests=false, if you want to persist a different
# behavior than the default in your build environment,.
#
includeBuildManualTests=true
includeBuildAttachManualTests=false
